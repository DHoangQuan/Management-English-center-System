@model EnglishCenter.Models.Content

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_BlogAdminLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Content</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.content_id)

       
        <div class="form-group">
            @Html.LabelFor(model => model.RepresentImage, "RepresentImage", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@foreach (var img in Model)
                {*@
                    @if (Model.RepresentImage == null)
                    {
                        <img style="height:150px;" src="~/MaterialBlogTemplate/images/NoneImage.png" alt="">
                    }else
                    {
                        <img style="height:150px;width:auto;" class="card-img rounded-0" src="@Model.RepresentImage" alt="">
                    }
                @*}*@
            </div>
        </div>
        <div class="form-group">

            <div class="col-md-10">
                @Html.HiddenFor(model => model.RepresentImage)

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RepresentImage, "   ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <a href="javascript:void(0);" class="EditRepresentImage btn btn-gradient-info" data-id="@Model.content_id" data-toggle="modal" data-target="#myModal">Change RepresentImage</a>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.content_title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.content_title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.content_title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.content_post, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.content_post,new { @class = "form-control", @id= "EditContentPost" })
                @Html.ValidationMessageFor(model => model.content_post, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">

            <div class="col-md-10">
                @Html.HiddenFor(model => model.status)

            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.HiddenFor(model => model.date_post)

            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.HiddenFor(model => model.PeopleID)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TopicPostID, "TopicName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TopicPostID",null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TopicPostID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content" style="width:700px;">
            <div id='myModalContent' style="padding: 20px"></div>
        </div>
    </div>

</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
